const fs = require('fs');
const path = require('path');

try {
  // Leer el prompt mejorado
  const improvedPrompt = fs.readFileSync('assistant_prompt_improved.txt', 'utf-8');
  console.log('‚úÖ Prompt mejorado cargado:', improvedPrompt.length, 'caracteres');

  // Leer el archivo create.js actual
  const createJsPath = path.join('api', 'assistant', 'create.js');
  let createJs = fs.readFileSync(createJsPath, 'utf-8');
  console.log('‚úÖ Archivo create.js cargado');

  // Reemplazar el prompt completo entre el primer backtick de instructions y el √∫ltimo .`
  // Buscar: instructions: `...`,
  const regex = /(instructions:\s*`)([\s\S]*?)(`\s*,\s*tools:)/;

  if (!regex.test(createJs)) {
    console.error('‚ùå No se encontr√≥ el patr√≥n del prompt en create.js');
    process.exit(1);
  }

  const newCreateJs = createJs.replace(regex, `$1${improvedPrompt}$3`);

  // Guardar el archivo actualizado
  fs.writeFileSync(createJsPath, newCreateJs, 'utf-8');

  console.log('‚úÖ Archivo create.js actualizado exitosamente');
  console.log('');
  console.log('üìä Cambios aplicados:');
  console.log('  - Fuente exclusiva: Turijobs.com');
  console.log('  - Jerarqu√≠as con pesos (0.30-1.00)');
  console.log('  - Tabla de distancias geogr√°ficas');
  console.log('  - B√∫squeda por sector completo');
  console.log('  - Reglas din√°micas de aprendizaje');
  console.log('');
  console.log('üöÄ Pr√≥ximo paso: Hacer commit y deploy');

} catch (error) {
  console.error('‚ùå Error:', error.message);
  process.exit(1);
}
